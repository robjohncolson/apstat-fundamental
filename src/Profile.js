// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_int32 from "rescript/lib/es6/caml_int32.js";

function deriveKeysFromSeed(seed) {
  var pubkey = "pub_" + seed;
  var privkey = "priv_" + seed;
  return [
          pubkey,
          privkey
        ];
}

function selectRandomWords(wordList) {
  var indices = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11
  ];
  return Belt_Array.reduce(indices, "", (function (acc, i) {
                var wordListLength = wordList.length;
                var word = wordList[Caml_int32.mod_(i, wordListLength)];
                return acc + (
                        i === 0 ? "" : " "
                      ) + word;
              }));
}

function calculateArchetype(transactions) {
  if (Belt_List.length(transactions) > 10) {
    return "Explorers";
  } else {
    return "Other";
  }
}

function updateProfile(profile, result) {
  var newStreak = result.isMatch ? profile.streak + 1 | 0 : 0;
  var newHistory = Belt_List.add(profile.history, result.questionId);
  var newArchetype = calculateArchetype(newHistory);
  return {
          userId: profile.userId,
          pubkey: profile.pubkey,
          privkey: profile.privkey,
          reputation: profile.reputation,
          history: newHistory,
          streak: newStreak,
          archetype: newArchetype,
          seedphrase: profile.seedphrase,
          wordList: profile.wordList
        };
}

export {
  deriveKeysFromSeed ,
  selectRandomWords ,
  calculateArchetype ,
  updateProfile ,
}
/* No side effect */
